class RagVecDB:
    def __init__(
        self,
        dim: int,
        dist: str = "cosine",
        ef_construction: int = 200,
        M: int = 16,
        max_elements: int = 0,
        seed: int | None = None,
    ) -> None: ...
    @staticmethod
    def load(path: str) -> "RagVecDB": ...
    def save(self, path: str) -> None: ...
    def add(self, vec: list[float], metadata: dict[str, str]) -> int: ...
    def batch_add(
        self, vec_list: list[list[float]], metadata_list: list[dict[str, str]]
    ) -> list[int]: ...
    def __len__(self) -> int: ...
    def get_vec(self, id: int) -> list[float]: ...
    def get_metadata(self, id: int) -> dict[str, str]: ...
    def set_metadata(self, id: int, metadata: dict[str, str]) -> None: ...
    def search_as_id(
        self, query: list[float], k: int, ef: int | None = None
    ) -> list[int]: ...
    def search(
        self, query: list[float], k: int, ef: int | None = None
    ) -> list[dict[str, str]]: ...
